1.display: flex; //将对象作为弹性伸缩盒显示
【技巧】1.首先将盒子内的元素作为弹性伸缩盒子进行展示[因此首先需要添加这句]
        2.将对象作为弹性盒子展示后再添加其他属性
【注】设为Flex布局以后，子元素的float、clear和vertical-align属性将失效。
2.容器属性:
   ・flex-direction
     flex-direction属性：决定主轴的方向（即项目的排列方向）
     [例]
.box {
   flex-direction: row | row-reverse | column | column-reverse;
}
 [说明]
row（默认）：主轴水平方向，起点在左端；
row-reverse：主轴水平方向，起点在右端；
column：主轴垂直方向，起点在上边沿；
column-reserve：主轴垂直方向，起点在下边沿。
   ・flex-wrap
   flex-wrap属性：定义换行情况
   .box{
   flex-wrap: nowrap | wrap | wrap-reverse;
   [说明]
   ・nowrap（默认）：不换行；
   ・wrap-reverse：换行，第一行在下方。
}

   ・flex-flow
   ・justify-content
   justify-content属性：定义项目在主轴上的对齐方式。
   .box {
   justify-content: start | end | flex-start | flex-end | center | left | right | space-between | space-around | space-evenly | stretch | safe | unsafe | baseline | first baseline | last baseline;
}
[说明]
    ・flex-start（默认值）：左对齐；
    ・flex-end：右对齐；


   ・align-item
   ・align-content
   ・center：居中；
   ・space-between：两端对齐，项目之间间隔相等；
   ・space-around：每个项目两侧的间隔相等，即项目之间的间隔比项目与边框的间隔大一倍。
align-items属性：定义在交叉轴上的对齐方式
.box{
    align-items: flex-start | flex-end | center | baseline | stretch;
}
・flex-start：起点对齐；
・flex-end：终点对齐；
・center：中点对齐；
・baseline：项目的第一行文字的基线对齐；
・stretch（默认值）：如果项目未设置高度或设为auto，将占满整个容器的高度。
align-content属性：定义多根轴线的对齐方式