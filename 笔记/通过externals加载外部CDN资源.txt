通过externals加载CDN资源
【使用原因】通过import语法导入的第三方依赖包，最终会被大伯啊合并到同一个文件中，从而导致打包成功后，单文件的体积过大
【原理】externals在webpack配置后然后不进行合并，会去window中进行查找全局对象，然后直接使用，只需导入一次即可，不会再进行合并
【操作】
1.【原因】:因为只有在发布的使用打包需要配置，所以只需写到发布模式中
【externals配置代码】
config.set('externals', {
        vue: 'Vue',
        'vue-router': 'VueRouter',
        axios: 'axios',
        lodash: '_',
        echarts: 'echarts',
        nprogress: 'NProgress',
        'vue-quill-editor': 'VueQuillEditor'
      })

      config.plugin('html').tap(args => {
        args[0].isProd = true
        return args
      })
    })

2.删除main-prod.js中富文本样式
【原因】在打包的时候，样式也会打包进去，导致文件大小很大
删除main-prod.js中富文本样式
3.在public/index.html文件的头部，添加如下的CDN资源引用【因为没有样式页面很丑】【<title>标签下面】
<!-- nprogress 的样式表文件 -->
    <link rel="stylesheet" href="https://cdn.staticfile.org/nprogress/0.2.0/nprogress.min.css" />
    <!-- 富文本编辑器 的样式表文件 -->
    <link rel="stylesheet" href="https://cdn.staticfile.org/quill/1.3.4/quill.core.min.css" />
    <link rel="stylesheet" href="https://cdn.staticfile.org/quill/1.3.4/quill.snow.min.css" />
    <link rel="stylesheet" href="https://cdn.staticfile.org/quill/1.3.4/quill.bubble.min.css" />
4.导入js文件如下【放在css文件下面就可以】【因为打包的时候也从window中找】

<script src="https://cdn.staticfile.org/vue/2.5.22/vue.min.js"></script>
    <script src="https://cdn.staticfile.org/vue-router/3.0.1/vue-router.min.js"></script>
    <script src="https://cdn.staticfile.org/axios/0.18.0/axios.min.js"></script>
    <script src="https://cdn.staticfile.org/lodash.js/4.17.11/lodash.min.js"></script>
    <script src="https://cdn.staticfile.org/echarts/4.1.0/echarts.min.js"></script>
    <script src="https://cdn.staticfile.org/nprogress/0.2.0/nprogress.min.js"></script>
    <!-- 富文本编辑器的 js 文件 -->
    <script src="https://cdn.staticfile.org/quill/1.3.4/quill.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/vue-quill-editor@3.0.4/dist/vue-quill-editor.js"></script>

5.重新打包，进行测试